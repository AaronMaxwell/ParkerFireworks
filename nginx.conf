server {
    server_name _;

    # Listen for HTTP/2 and HTTPS on TCP port 443.
    listen 443 quic;
    listen 443 ssl;


    # Specify your SSL certificate and private key paths.
    ssl_certificate /etc/nginx/certs/fullchain.pem; # Replace with your fullchain certificate path
    ssl_certificate_key /etc/nginx/certs/privkey.pem; # Replace with your private key path

    # Add Alt-Svc header to advertise HTTP/3 support to clients.
    # This tells browsers that the server also supports HTTP/3 on the same port.
    add_header Alt-Svc 'h3=":443"; ma=86400';

    ssl_early_data on;

    include mime.types;
    default_type application/octet-stream;

    # Sendfile improves performance by copying data directly between file descriptors.
    sendfile on;
    # tcp_nopush helps optimize sendfile by sending data in full packets.
    tcp_nopush on;
    # tcp_nodelay ensures small packets are sent immediately, useful for interactive traffic.
    tcp_nodelay on;

    # Gzip Compression - Reduces bandwidth usage and improves load times
    # Enable gzip compression.
    gzip on;
    # Specify MIME types to compress.
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    # Set the minimum length of a response to compress.
    gzip_min_length 1000;
    # Compress even if the client doesn't explicitly send "Accept-Encoding: gzip".
    gzip_proxied any;
    # Set the compression level (1-9, 9 is highest but more CPU intensive).
    gzip_comp_level 5;
    # Instruct proxies not to cache both compressed and uncompressed versions.
    gzip_vary on;

    # Keep-alive settings for persistent connections.
    # Defines the timeout for keep-alive connections.
    keepalive_timeout 65;
    # Disables HTTP/1.0 keep-alive connections after the first request.
    keepalive_requests 100;

    # SSL/TLS Optimizations - Essential for secure and performant HTTPS
    # Ensure SSL/TLS sessions are reused for performance.
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets on; # Enable session tickets for TLS 1.2+

    # OCSP Stapling - Improves SSL handshake speed and security validation.
    ssl_stapling on;
    ssl_stapling_verify on;
    # Path to your trusted certificate chain for OCSP stapling verification.
    ssl_trusted_certificate /etc/nginx/certs/fullchain.pem; # Ensure this points to your fullchain.pem

    # Use strong cryptographic protocols. Prefer TLSv1.3 for its performance and security benefits.
    ssl_protocols TLSv1.3 TLSv1.2;
    # Specify strong cipher suites. Exclude weak and insecure ciphers.
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    # Prefer server's cipher order over client's.
    ssl_prefer_server_ciphers on;


    location / {
        proxy_pass http://web:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

}
